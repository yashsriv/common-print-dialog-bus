<?xml version="1.0" encoding="UTF-8"?>

<node xmlns:doc="http://www.freedesktop.org/dbus/1.0/doc.dtd">
  <interface name="org.openprinting.PrintDialog.PrintDialog">
    <doc:doc>
      <doc:description>
        <doc:para>A PrintDialog object represents one instance of a printing 
          dialog. Applications can create PrintDialogs with 
          Manager.CreatePrintDialog.</doc:para>
        <doc:para>Typically, an application will first add some custom options
          with <doc:ref type="method" to="PrintDialog.AddOption">AddOption</doc:ref>, and maybe even add some option presets with <doc:ref
          type="method" to="PrintDialog.AddPreset">AddPreset</doc:ref>. It might
          also set the <doc:ref type="method"
          to="PrintDialog.SetDocumentName">name</doc:ref> of the document, which will be
          included in the print job's name. Afterwards, the dialog can be <doc:ref
          type="method" to="PrintDialog.Show">shown</doc:ref> to the user.</doc:para>
        <doc:para>Depending on the size and complexity of the document, an application
          might want to send the whole document as a preview or only parts of it, maybe of
          lower quality. The PrintDialog interface supports both approaches: To send the whole
          document, it suffices to call <doc:ref type="method" to="PrintDialog.RequestDocumentDataSocket">
          RequestDocumentDataSocket</doc:ref> and to transmit the document data on the returned
          socket. To transmit a lower quality version or only parts of the document,
          <doc:ref type="method" to="PrintDialog.RequestPreviewDataSocket">RequestPreviewDataSocket
          </doc:ref> can be used. The dialog will emit <doc:ref type="signal" to="PrintDialog.ReadyForDocumentData">
          ReadyForDocumentData</doc:ref> if the user starts the print job. This way, the full
          document data does not need to be transferred if the user 
          <doc:ref type="signal" to="PrintDialog.Cancelled">cancels</doc:ref> the dialog.</doc:para>
      </doc:description>
    </doc:doc>

    <method name="Show">
      <doc:doc>
        <doc:description>
          <doc:para>Shows the dialog. This should be called after all configuration (e.g. adding of options or presets) 
          has been done.</doc:para>
        </doc:description>
      </doc:doc>
    </method>
    
    <method name="SetDocumentName">
      <doc:doc>
        <doc:description>
          <doc:para>Set the name of the document that will be printed.</doc:para>
          <doc:para>The job title will have the document name in it. Furthermore, it might appear in the window title 
          of the printing dialog.</doc:para>
        </doc:description>
      </doc:doc>

      <arg name="name" type="s">
        <doc:doc>
          <doc:summary>The name of the document</doc:summary>
        </doc:doc>
      </arg>
    </method>

    <method name="SetNumberOfPages">
      <doc:doc>
        <doc:description>
          <doc:para>Set the number of pages of the final document.</doc:para>
          <doc:para>This method needs to be called only if the provided preview does not contain all pages
          of the final document. </doc:para>
        </doc:description>
      </doc:doc>
      <arg name="pagecnt" type="i"/>
    </method>

    <method name="SetDocumentSize">
      <doc:doc>
        <doc:description>
          <doc:para>Set the size of the final document in bytes.</doc:para>
        </doc:description>
      </doc:doc>
      <arg name="size" type="u"/>
    </method>

    <method name="RequestDocumentDataSocket">
      <doc:doc>
        <doc:description>
          <doc:para>Returns the address of a local domain socket on which document data can be send to the dialog.</doc:para>
          <doc:para>An application may send document data before the user initiates the actual print action. In this 
          case, the data will be used by the dialog to show a preview of the document. If the document is too large, 
          <doc:ref type="method"  to="PrintDialog.RequestPreviewDataSocket"> RequestPreviewDataSocket</doc:ref> can be used 
          to send a preview which may be of lower quality and does not include all pages of the final document.</doc:para>
          <doc:para>In any case, the dialog emits  <doc:ref type="signal" to="PrintDialog.ReadyForDocumentData">
          ReadyForDocumentData </doc:ref> when the document data is ultimately needed. At the latest, an application should
           send the document after receiving this signal. </doc:para>
          <doc:para>The socket will be closed by the dialog after the whole document has been transmitted. To transmit a 
          different version  of the document, for example in response to a <doc:ref type="signal" to="PrintDialog.OptionChanged">
          OptionChanged </doc:ref> signal, a new socket must be requested.</doc:para>
        </doc:description>
      </doc:doc>
      <arg name="socketname" type="s" direction="out"/>
    </method>

    <method name="RequestPreviewDataSocket">
      <doc:doc>
        <doc:description>
          <doc:para>Returns the address of a local domain socket on which preview data can be send to the dialog.</doc:para>
          <doc:para>This method allows applications to send a lower quality of the document, which need not include all
          pages of the final document. The dialog sends <doc:ref type="signal" to="PrintDialog.NeedPreviewPage"> 
          NeedPreviewPage</doc:ref> if the user wants to see pages in the preview which are not yet transmitted. </doc:para>
          <doc:para>If the whole document shall be used as a preview, use <doc:ref type="method" to="PrintDialog.RequestDocumentDataSocket">
          RequestDocumentDataSocket</doc:ref> instead. This avoids transmitting the whole document twice. </doc:para>
        </doc:description>
      </doc:doc>
      <arg name="socktname" type="s" direction="out">
        <doc:doc>
          <doc:summary>The name of the socket on which the server will listen for the preview data.</doc:summary>
        </doc:doc>
      </arg>
      <arg name="firstpage" type="u">
        <doc:doc>
          <doc:summary>The page number of the "real" document to which the first page in the preview corresponds. 
          Note: The first page is "1", not "0".</doc:summary>
        </doc:doc>
      </arg>
      <arg name="canrequestmore" type="b">
        <doc:doc>
          <doc:summary>If true, the dialog can request more preview data with  <doc:ref type="signal" to="PrintDialog.NeedPreviewPage">
          NeedPreviewPage</doc:ref>.</doc:summary>
        </doc:doc>
      </arg>
    </method>

    <method name="AddOption">
      <doc:doc>
        <doc:description>
          <doc:para>Adds an application specific option.</doc:para>
          <doc:para>An option structure consists of:
            <doc:list>
              <doc:item>The name of the option (string).</doc:item>
              <doc:item>A human readable version of the option name (string).</doc:item>
              <doc:item>The option type (string).</doc:item>
              <doc:item>Predefined choices for this option as array of string tuples, where the first 
                string is the choice name and the second one is a human readable version (array of string tuples).</doc:item>
              <doc:item>The default value (variant).</doc:item>
              <doc:item>The minimum value. For string and password options, this is the minimum character count (variant).</doc:item>
              <doc:item>The maximum value. For string and password options, this is the minimum character count (variant).</doc:item>
              <doc:item>A posix-style regular expression, which valid string and password values must match (string).</doc:item>
              <doc:item>Tags associated with the option (array of strings).</doc:item>
              <doc:item>Option hints (array of strings).</doc:item>
            </doc:list>
          </doc:para>
        </doc:description>
      </doc:doc>
      <annotation name="com.trolltech.QtDBus.QtTypeName.In0" value="Option"/>
      <arg name="option" type="(sssa(ss)vvvsasas)">
        <doc:doc>
          <doc:summary>The option structure.</doc:summary>
        </doc:doc>
      </arg>

      <arg name="success" type="b" direction="out">
        <doc:doc>
          <doc:summary>True if the option was successfully added.</doc:summary>
        </doc:doc>
      </arg>
    </method>

    <method name="SetOptionIcon">
      <doc:doc>
        <doc:description>
          <doc:para>Sets an icon for an option.</doc:para>
        </doc:description>
      </doc:doc>
      <arg name="option" type="s">
        <doc:doc>
          <doc:summary>The name of the option for which the icon shall be set. </doc:summary>
        </doc:doc>
      </arg>
      <arg name="icon" type="ay">
        <doc:doc>
          <doc:summary>The icon data, base64-coded.</doc:summary>
        </doc:doc>
      </arg>
    </method>

    <method name="SetChoiceIcon">
      <doc:doc>
        <doc:description>
        <doc:para>Sets an icon for predefined choice of an option.</doc:para>
        </doc:description>
      </doc:doc>
      <arg name="option" type="s">
        <doc:doc>
          <doc:summary>The name of the option.</doc:summary>
        </doc:doc>
      </arg>
      <arg name="choice" type="s">
        <doc:doc>
          <doc:summary>The name of the choice for which the icon shall be set. </doc:summary>
        </doc:doc>
      </arg>
      <arg name="icon" type="ay">
        <doc:doc>
          <doc:summary>The icon data, base64 endcoded.</doc:summary>
        </doc:doc>
      </arg>
    </method>

    <method name="GetOptionValue">
      <doc:doc>
        <doc:description>
          <doc:para>Returns the current value of an option.</doc:para>
        </doc:description>
      </doc:doc>
      <arg name="name" type="s"/>
      <arg name="value" type="v" direction="out"/>
    </method>

    <method name="SetOptionValue">
      <doc:doc>
        <doc:description>
          <doc:para>Set an option to a new value.</doc:para>
        </doc:description>
      </doc:doc>
      <arg name="name" type="s"/>
      <arg name="value" type="v"/>
      <arg name="success" type="b" direction="out"/>
    </method>

    <method name="AddPreset">
      <doc:doc>
        <doc:description>
          <doc:para>Add a preset to the dialog. Presets are a quick and easy way for users to set multiple options 
            at the same time.</doc:para>
        </doc:description>
      </doc:doc>
      <arg name="name" type="s">
        <doc:doc>
          <doc:summary>The name of the preset.</doc:summary>
        </doc:doc>
      </arg>
      <arg name="options" type="s">
        <doc:doc>
          <doc:summary>Option settings as a single string in the form  "option1=value1 option2=value2 ...".</doc:summary>
        </doc:doc>
      </arg>
    </method>

    <signal name="OptionChanged">
      <doc:doc>
        <doc:description>
          <doc:para>This signal is emitted whenever an option changed. This might be application specific options
            added with <doc:ref type="method" to="PrintDialog.AddOption">AddOption</doc:ref>, or printer specific options,
            such as "PageSize"</doc:para>
        </doc:description>
      </doc:doc>
      <arg name="name" type="s"/>
      <arg name="value" type="v"/>
    </signal>

    <signal name="Cancelled">
      <doc:doc>
        <doc:description>
          <doc:para>This signal is emitted if a user cancels the dialog. The "PrintDialog" object will not be accessible anymore.</doc:para>
        </doc:description>
      </doc:doc>
    </signal>

    <signal name="ReadyForDocumentData">
      <doc:doc>
        <doc:description>
          <doc:para>This signal is emitted after the user initiates the print process (i.e. clicks "Print"). If an 
            application has not yet send its document data it should do so now, by requesting a socket connection with 
            <doc:ref type="method"  to="PrintDialog.RequestDocumentDataSocket"> RequestDocumentDataSocket</doc:ref>. 
            The dialog object will be deleted after the document is transmitted.</doc:para>
        </doc:description>
      </doc:doc>
    </signal>

    <signal name="NeedPreviewPage">
      <doc:doc>
        <doc:description>
          <doc:para>This signal is emitted if the user browses through the document preview and the hits a page with has 
            not yet been send by the application (see <doc:ref type="method"  to="PrintDialog.RequestPreviewDataSocket">
            RequestPreviewDataSocket</doc:ref>). In this case, the application should send a preview containing "page". </doc:para>
        </doc:description>
      </doc:doc>
      <arg name="page" type="i"/>
    </signal>

  </interface>
</node>
